{"ast":null,"code":"const initialState = {\n  gamesBackUp: [],\n  gameDetails: {},\n  genres: [],\n  filtered: []\n};\nexport default function rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'GET_ALL_GAMES':\n      return {\n        ...state,\n        allGames: action.payload,\n        gamesBackUp: action.payload,\n        filtered: action.payload\n      };\n    case 'CLEAN':\n      return {\n        ...state,\n        gameDetails: {}\n      };\n    case 'VOLVER_A_HOME':\n      return {\n        ...state,\n        filtered: state.gamesBackUp\n      };\n    case 'GET_VIDEOGAME_DETAIL':\n      return {\n        ...state,\n        gameDetails: action.payload\n      };\n    case 'SEARCH_BY_NAME':\n      return {\n        ...state,\n        filtered: action.payload\n      };\n    case 'GET_GENRES':\n      return {\n        ...state,\n        genres: action.payload\n      };\n    case 'FILTER_BY':\n      if (action.payload === 'default') {\n        return {\n          ...state,\n          filtered: state.gamesBackUp\n        };\n      }\n      if (action.payload === 'DB') {\n        return {\n          ...state,\n          filtered: state.gamesBackUp.filter(game => typeof game.id === 'string')\n        };\n      }\n      if (action.payload === 'API') {\n        return {\n          ...state,\n          filtered: state.gamesBackUp.filter(game => typeof game.id === 'number')\n        };\n      } else {\n        return {\n          ...state,\n          filtered: state.gamesBackUp.filter(game => {\n            return game.genres.find(genre => {\n              return genre === action.payload;\n            });\n          })\n        };\n      }\n      ;\n    case 'ORDER_BY':\n      if (action.payload === 'A-Z') {\n        return {\n          ...state,\n          filtered: [...state.filtered].sort((prev, next) => {\n            if (prev.name > next.name) return 1;\n            if (prev.name < next.name) return -1;\n            return 0;\n          })\n        };\n      }\n      if (action.payload === 'Z-A') {\n        return {\n          ...state,\n          filtered: [...state.filtered].sort((prev, next) => {\n            if (prev.name > next.name) return -1;\n            if (prev.name < next.name) return 1;\n            return 0;\n          })\n        };\n      }\n      if (action.payload === 'desc') {\n        return {\n          ...state,\n          filtered: [...state.filtered].sort((prev, next) => prev.rating - next.rating)\n        };\n      }\n      if (action.payload === 'asc') {\n        return {\n          ...state,\n          filtered: [...state.filtered].sort((prev, next) => next.rating - prev.rating)\n        };\n      } else {\n        return {\n          ...state,\n          filtered: state.gamesBackUp\n        };\n      }\n      ;\n    default:\n      return state;\n  }\n}\n;","map":{"version":3,"names":["initialState","gamesBackUp","gameDetails","genres","filtered","rootReducer","state","arguments","length","undefined","action","type","allGames","payload","filter","game","id","find","genre","sort","prev","next","name","rating"],"sources":["C:/Users/Asus/Desktop/pi/Geeking/client/src/Redux/reducers.js"],"sourcesContent":["\r\nconst initialState = {\r\n    gamesBackUp: [],\r\n    gameDetails: {},\r\n    genres: [],\r\n    filtered: [],\r\n};\r\n\r\nexport default function rootReducer(state = initialState, action) { \r\n    switch (action.type) { \r\n           case 'GET_ALL_GAMES': \r\n                return { \r\n                    ...state,\r\n                    allGames: action.payload,\r\n                    gamesBackUp: action.payload,\r\n                    filtered: action.payload\r\n                    \r\n            }; \r\n\r\n            case 'CLEAN':\r\n                return{\r\n                    ...state,\r\n                    gameDetails: {}\r\n                } \r\n\r\n            case 'VOLVER_A_HOME':\r\n                return {...state,\r\n                    filtered: state.gamesBackUp\r\n                } \r\n            case 'GET_VIDEOGAME_DETAIL':\r\n                return {\r\n                ...state,\r\n                gameDetails: action.payload\r\n            }; \r\n\r\n            case 'SEARCH_BY_NAME':\r\n                return {\r\n                ...state,\r\n                filtered: action.payload\r\n            }; \r\n\r\n            case 'GET_GENRES': \r\n                return {\r\n                    ...state,\r\n                    genres: action.payload \r\n                }; \r\n                \r\n            case 'FILTER_BY':\r\n                    if (action.payload === 'default'){\r\n                        return {...state, filtered: state.gamesBackUp}\r\n                        } \r\n                      \r\n                    if(action.payload === 'DB'){\r\n                        return {...state, filtered: state.gamesBackUp.filter((game)=> (typeof game.id) === 'string')}\r\n                        } \r\n                      \r\n                    if(action.payload === 'API'){\r\n                        return {...state, filtered: state.gamesBackUp.filter((game)=> (typeof game.id) === 'number')}\r\n                        } \r\n                      \r\n                    else {\r\n                        return {...state, filtered: state.gamesBackUp.filter((game) => {\r\n                            return game.genres.find((genre) => {\r\n                                return genre === action.payload})\r\n                        })} \r\n                    };\r\n\r\n            case 'ORDER_BY':\r\n                if(action.payload === 'A-Z'){\r\n                    return {...state, filtered: [...state.filtered].sort((prev, next) => {\r\n                        if(prev.name > next.name) return 1\r\n                        if(prev.name < next.name) return -1\r\n                        return 0\r\n                    })}} \r\n                      \r\n                if(action.payload === 'Z-A'){\r\n                    return {...state, filtered: [...state.filtered].sort((prev, next) => {\r\n                        if(prev.name > next.name) return -1\r\n                        if(prev.name < next.name) return 1\r\n                        return 0\r\n                    })}} \r\n                      \r\n                if(action.payload === 'desc'){\r\n                    return {...state, filtered: [...state.filtered].sort((prev,next) => prev.rating - next.rating)}\r\n                   }\r\n                      \r\n                if(action.payload === 'asc'){\r\n                    return {...state, filtered: [...state.filtered].sort((prev,next) => next.rating - prev.rating)}\r\n                    }     \r\n                else {\r\n                    return {...state, filtered: state.gamesBackUp}\r\n                    }; \r\n        default: \r\n            return state;\r\n    }\r\n         \r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}